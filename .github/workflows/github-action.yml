name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  SSH_USER: ubuntu
  SSH_HOST: 3.80.209.201
  DEPLOY_DIR: /home/ubuntu/prod
  BACKUP_DIR: /home/ubuntu/backup
  SERVE_PORT: 3000

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      BUILD_NUMBER: ${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          sudo apt-get update -y
          sudo apt-get install openssh-client -y
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Backup and clear deployment directory on server
        run: |
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "mkdir -p ${{ env.BACKUP_DIR }}/build_${{ env.BUILD_NUMBER }} && mv ${{ env.DEPLOY_DIR }}/build ${{ env.BACKUP_DIR }}/build_${{ env.BUILD_NUMBER }} && rm -rf ${{ env.DEPLOY_DIR }}/build"

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Deploy to server
        run: scp -r build ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.DEPLOY_DIR }}

      - name: Start server
        run: |
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "
            cd ${{ env.DEPLOY_DIR }}/build &&
            npm install serve &&
            tmux new-session -d -s serve_session './node_modules/.bin/serve -s . -p ${{ env.SERVE_PORT }}'
          "
