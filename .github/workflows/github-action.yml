on:
  push:
    branches: main

env:
  DEPLOY_DIR: /home/ubuntu/prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x to Build
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    - run: npm install
    - run: npm run build
    - name: ssh deploy on aws ec2
      uses: easingthemes/ssh-deploy@v2.1.4
      env:
        SSH_PRIVATE_KEY: ${{ secrets.AWS_SECRET_KEY }}
        REMOTE_HOST: 3.92.216.148
        REMOTE_USER: ubuntu
        REMOTE_PORT: 22
        SOURCE: "build/"
        TARGET: $DEPLOY_DIR/build
    - name: Backup and Start Application
      uses: appleboy/ssh-action@v1.0.3
      env:
        DEPLOY_DIR: /home/ubuntu/prod
        BACKUP_DIR: /home/ubuntu/backup
      with:
        host: 3.92.216.148
        username: ubuntu
        key: ${{ secrets.AWS_SECRET_KEY }}
        envs: DEPLOY_DIR,BACKUP_DIR
        script: |
          echo $DEPLOY_DIR
          mkdir -p $BACKUP_DIR
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          if [ -d "$DEPLOY_DIR/build" ]; then
            cp -r $DEPLOY_DIR/build $BACKUP_DIR/build_$TIMESTAMP
          fi
          if tmux has-session -t serve_session 2>/dev/null; then
            tmux kill-session -t serve_session
          fi
          cd $DEPLOY_DIR/build
          npm install serve
          tmux new-session -d -s serve_session './node_modules/.bin/serve -s .'
